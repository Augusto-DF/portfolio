name: Deploy to VPS

on:
  push:
    branches:
      #- master   # Production branch
      - staging # Staging branch

jobs:
  deploy:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "ssh88635517" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

      - name: Set environment based on branch
        id: env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            # Master branch
            echo "environment=production" >> $GITHUB_ENV
            echo "deploy_path=/path/to/production/project" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            # Staging branch
            echo "environment=staging" >> $GITHUB_ENV
            echo "deploy_path=~/../home/projects/augustocode/staging/portfolio" >> $GITHUB_ENV
            echo "repo_url=git@github.com:Augusto-DF/portfolio.git" >> $GITHUB_ENV  # Update this line
          fi

      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY }}
          passphrase: ${{ secrets.VPS_PASS }}
          port: 22
          script: |
            set -e  # Exit immediately if a command exits with a non-zero status
            cd ${{ env.deploy_path }}
            echo "Pulling latest changes..."
            eval "$(ssh-agent -s)"
            git remote -v
            ssh-add -l
            git pull ${{ env.repo_url }} ${{ env.environment }}  # Use the SSH URL

            # Debugging outputs
            echo "Current environment: ${{ env.environment }}"
            echo "Deploy path: ${{ env.deploy_path }}"
            echo "Finished pulling."

            # Check if npm is installed
            if command -v npm &> /dev/null; then
              echo "Installing npm dependencies..."
              npm install
            else
              echo "npm is not installed. Please install Node.js and npm."
              exit 1
            fi

            # Check if yarn is installed
            if command -v yarn &> /dev/null; then
              echo "Building the project with yarn..."
              yarn build
            else
              echo "yarn is not installed. Please install Yarn."
              exit 1
            fi

            echo "Restarting Nginx..."
            sudo systemctl restart nginx
